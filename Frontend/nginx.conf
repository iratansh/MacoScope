server {
    listen 443 ssl;
    server_name mmacroscope.me www.mmacroscope.me;

    ssl_certificate /etc/nginx/ssl/mmacroscope.pem;
    ssl_certificate_key /etc/nginx/ssl/mmacroscope.key;

    root /usr/share/nginx/html;
    index index.html;

    # Static files
    location /static/ {
        alias /home/ec2-user/MacroScope/Backend/static/;
    }

    # General API endpoints
    location ~ ^/(auth|forecast|admin|verification)/ {
        proxy_pass http://unix:/home/ec2-user/MacroScope/Backend/Backend/.sock;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Handle CORS headers
        add_header 'Access-Control-Allow-Origin' 'https://www.mmacroscope.me';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-CSRFToken';
        add_header 'Access-Control-Allow-Credentials' 'true';

        # Handle preflight (OPTIONS) requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://www.mmacroscope.me';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-CSRFToken';
            add_header 'Content-Length' 0;
            add_header 'Content-Type' 'text/plain';
            return 204;
        }
    }

    # React frontend or Vue.js frontend (fallback for SPA routing)
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Security headers
    add_header X-Content-Type-Options "nosniff";
    add_header X-Frame-Options "DENY";
    add_header X-XSS-Protection "1; mode=block";

    # Error pages
    error_page 404 /index.html;
}

server {
    listen 80;
    server_name mmacroscope.me www.mmacroscope.me;

    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}
